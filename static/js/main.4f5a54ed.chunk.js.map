{"version":3,"sources":["components/Animal/index.tsx","components/hooks/useClickOutside/index.tsx","components/AnimalList/index.tsx","components/AnimalSelect/index.tsx","components/Backdrop/index.tsx","App.tsx","index.tsx"],"names":["Animal","selectedStyle","id","name","style","className","useClickOutside","useState","setListening","onStartListeningClickOutside","zIndex","waitingOnClickOutside","listening","onClickOutside","AnimalList","selectedValue","animalOptions","map","animal","Fragment","AnimalSelect","clicked","onChange","value","Backdrop","show","onClick","ANIMALS","App","setSelectedValue","showBackdrop","setShowBackdrop","prev","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAiBeA,EARA,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,KACnC,OACE,oBAAIC,MAAOH,EAAeI,UAAU,mBAApC,SACGF,GADyDD,ICLnDI,G,MAAkB,WAAO,IAAD,EACDC,oBAAkB,GADjB,mBACjBC,GADiB,WAcnC,MAAO,CACLC,6BAZmC,WAGnC,OADAD,GAAa,GADC,CAAEE,OAAQ,MAYxBC,sBAR4B,SAACC,GAC7B,OAAOA,GAQPC,eANqB,WACrBL,GAAa,OCkBFM,EArBI,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,cACMV,IAAjCG,6BAER,OACE,oBAAIJ,UAAU,aAAd,SACGW,EAAcC,KAAI,SAACC,GAAD,OACjB,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,CACElB,cAEEc,IAAkBG,EAAOf,KAAO,CAAEO,OAAQ,KAAS,KAErDR,GAAIgB,EAAOhB,GACXC,KAAMe,EAAOf,QAPIe,EAAOhB,UCarBkB,G,MAtBM,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASL,EAA2B,EAA3BA,cAC/B,OACE,yBACEM,SAAUD,EACVlB,KAAK,UACLD,GAAG,gBACHG,UAAU,eAJZ,UAME,wBAAQkB,MAAM,GAAd,yCACCP,EAAcC,KAAI,SAACC,GAAD,OACjB,wBACEb,UAAU,uBAEVkB,MAAOL,EAAOf,KAHhB,SAKGe,EAAOf,MAHHe,EAAOhB,YCbPsB,G,MAHE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMZ,EAAT,EAASA,eAAT,OACfY,EAAO,qBAAKpB,UAAU,WAAWqB,QAASb,IAAyB,OCC/Dc,G,MAAU,CACd,CAAEzB,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,WACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,cAqCFyB,EAlCH,WAAO,IAAD,EAKZtB,IADFK,GAJc,EAEdF,6BAFc,EAGdI,eAHc,EAIdF,uBAJc,EAO0BJ,mBAAiB,IAP3C,mBAOTQ,EAPS,KAOMc,EAPN,OAQwBtB,oBAAkB,GAR1C,mBAQTuB,EARS,KAQKC,EARL,KAUhB,OACE,sBAAK1B,UAAU,MAAf,UACE,cAAC,EAAD,CACEoB,KAAMK,EACNjB,eAAgB,kBACdkB,GAAgB,SAACC,GAAD,OAAUrB,GAAuBqB,SAGrD,cAAC,EAAD,CACEhB,cAAeW,EACfN,QACE,SAACY,GACCJ,EAAiBI,EAAMC,OAAOX,OAC9BQ,IAAgBE,EAAMC,OAAOX,UAMnC,cAAC,EAAD,CAAYR,cAAeA,EAAeC,cAAeW,QC5C/DQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4f5a54ed.chunk.js","sourcesContent":["// styles\r\nimport \"./Animal.css\";\r\n\r\nexport interface AnimalProps {\r\n  selectedStyle?: any;\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst Animal = ({ selectedStyle, id, name }: AnimalProps) => {\r\n  return (\r\n    <li style={selectedStyle} className=\"animalList__item\" key={id}>\r\n      {name}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Animal;\r\n","// tools\r\nimport { useState } from \"react\";\r\n\r\n// Stwórz hooka useClickOutside, który bedzie działać np z customowymi\r\n// componentami typu dropdown lub select:\r\n\r\nexport const useClickOutside = () => {\r\n  const [listening, setListening] = useState<boolean>(false);\r\n\r\n  const onStartListeningClickOutside = () => {\r\n    const style = { zIndex: 1000 };\r\n    setListening(true);\r\n    return style;\r\n  };\r\n  const waitingOnClickOutside = (listening: boolean) => {\r\n    return listening;\r\n  };\r\n  const onClickOutside = () => {\r\n    setListening(false);\r\n  };\r\n  return {\r\n    onStartListeningClickOutside,\r\n    waitingOnClickOutside,\r\n    onClickOutside,\r\n  };\r\n};\r\n\r\n// który będzie działać wg poniższych wytycznych:\r\n\r\n// działanie 1:\r\n// -- zwraca prop onStartListeningClickOutside\r\n// --- jeśli ta funkcja zostanie wywołana dany komponent zyskuje z-index najwyższy na stronie\r\n// --- pod komponentem pojawia się półprzeźroczyste ciemne tło, w które można kliknąć zamykając komponent\r\n\r\n// działanie 2:\r\n// -- zwraca prop waitingOnClickOutside\r\n// --- zwraca true/false jeśli została wywołana metoda onStartListeningClickOutside\r\n\r\n// działanie 3:\r\n// -- prop onClickOutside\r\n// --- jesli ta funkcja zostanie wywołana komponent wraca na swoje miejsce z odpowiednim z-index\r\n// --- znika półprzeźroczyste szare tło spod komponentu\r\n","import React, { useEffect } from \"react\";\r\n// interfaces\r\nimport { AnimalProps } from \"../Animal/index\";\r\n// components\r\nimport Animal from \"../Animal\";\r\n// styles\r\nimport \"./AnimalList.css\";\r\n// tools\r\nimport { useClickOutside } from \"../hooks/useClickOutside\";\r\n\r\ninterface Props {\r\n  selectedValue: string;\r\n  animalOptions: AnimalProps[];\r\n}\r\n\r\nconst AnimalList = ({ selectedValue, animalOptions }: Props) => {\r\n  const { onStartListeningClickOutside } = useClickOutside();\r\n\r\n  return (\r\n    <ul className=\"animalList\">\r\n      {animalOptions.map((animal) => (\r\n        <React.Fragment key={animal.id}>\r\n          <Animal\r\n            selectedStyle={\r\n              // onStartListeningClickOutside(), { zIndex: 1000 }\r\n              selectedValue === animal.name ? { zIndex: 1000 } : null\r\n            }\r\n            id={animal.id}\r\n            name={animal.name}\r\n          />\r\n        </React.Fragment>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AnimalList;\r\n","// tools\r\nimport React from \"react\";\r\n// interfaces\r\nimport { AnimalProps } from \"../Animal/\";\r\n// styles\r\nimport \"./AnimalSelect.css\";\r\n\r\ninterface Props {\r\n  clicked: any;\r\n  animalOptions: AnimalProps[];\r\n}\r\n\r\nconst AnimalSelect = ({ clicked, animalOptions }: Props) => {\r\n  return (\r\n    <select\r\n      onChange={clicked}\r\n      name=\"animals\"\r\n      id=\"animal-select\"\r\n      className=\"animalSelect\"\r\n    >\r\n      <option value=\"\">--Please choose an option--</option>\r\n      {animalOptions.map((animal) => (\r\n        <option\r\n          className=\"animalSelect__option\"\r\n          key={animal.id}\r\n          value={animal.name}\r\n        >\r\n          {animal.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default AnimalSelect;\r\n","// styles\r\nimport \"./Backdrop.css\";\r\n\r\nexport interface BackdropProps {\r\n  show: boolean;\r\n  onClickOutside: () => void;\r\n}\r\n\r\nconst Backdrop = ({ show, onClickOutside }: BackdropProps) =>\r\n  show ? <div className=\"backdrop\" onClick={onClickOutside}></div> : null;\r\n\r\nexport default Backdrop;\r\n","// components\nimport AnimalList from \"./components/AnimalList\";\nimport AnimalSelect from \"./components/AnimalSelect\";\nimport Backdrop from \"./components/Backdrop\";\n// styles\nimport \"./App.css\";\n// tools\nimport { useClickOutside } from \"./components/hooks/useClickOutside\";\nimport { useState } from \"react\";\n\nconst ANIMALS = [\n  { id: 1, name: \"Dog\" },\n  { id: 2, name: \"Cat\" },\n  { id: 3, name: \"Hamster\" },\n  { id: 4, name: \"Parrot\" },\n  { id: 5, name: \"Spider\" },\n  { id: 6, name: \"Goldfish\" },\n];\n\nconst App = () => {\n  const {\n    onStartListeningClickOutside,\n    onClickOutside,\n    waitingOnClickOutside,\n  } = useClickOutside();\n\n  const [selectedValue, setSelectedValue] = useState<string>(\"\");\n  const [showBackdrop, setShowBackdrop] = useState<boolean>(false);\n\n  return (\n    <div className=\"App\">\n      <Backdrop\n        show={showBackdrop}\n        onClickOutside={() =>\n          setShowBackdrop((prev) => waitingOnClickOutside(!prev))\n        }\n      />\n      <AnimalSelect\n        animalOptions={ANIMALS}\n        clicked={\n          (event: React.ChangeEvent<{ value: string }>) => {\n            setSelectedValue(event.target.value);\n            setShowBackdrop(event.target.value ? true : false);\n          }\n\n          // console.log(event.target.value)\n        }\n      />\n      <AnimalList selectedValue={selectedValue} animalOptions={ANIMALS} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}